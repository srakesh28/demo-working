{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsPrefixNameForPublicIP": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "OSVersion": {
      "type": "string",
      "defaultValue": "14.04.2-LTS",
      "metadata": {
        "description": "Image SKU"
      }
    },
    "vmCount": {
      "type": "int"
      
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network Name"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine Name Prefix"
      }
    },
    "vmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_D2_v2",
        "Standard_D3_v2"
      ],
      "metadata": {
        "description": "Virtual Machine Size"
      }
    },


    "location": {
      "type": "string",
      "metadata": {
        "description": "Location"
      }
    }
  },

  "variables": {
    "addressPrefix": "10.0.0.0/16",
    "dataDiskSize": "10",
    "imageOffer": "UbuntuServer",
    "imagePublisher": "Canonical",
    "nicName": "webnic",
    "OSDiskName": "webosdisk",
    "publicIPAddressType": "Static",
    "storageAccountType": "Standard_LRS",
    "subnetName": "websubnet",
    "subnetPrefix": "10.0.0.0/24",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "vmStorageAccountContainerName": "vhds",
    "vmExtensionName": "WebCustomScriptExtension",
    "numberOfInstances": "[parameters('vmCount')]",
    "vmNamePrefix": "[parameters('vmNamePrefix')]",
    "webAvailabilitySetName": "WebAvSet",
    "scriptUrl": "https://raw.githubusercontent.com/srakesh28/azure-iaasv2-arm/single-vnet-vms-arm-templates/step2-linuxvm/apache-install-ubuntu.sh",
    "commandToExecute": "sh apache-install-ubuntu.sh",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('dnsPrefixNameForPublicIP'),copyIndex())]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsPrefixNameForPublicIP'),copyIndex())]"
        }
      },
      "copy": {
        "name": "publicIpCopy",
        "count": "[parameters('vmCount')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('webAvailabilitySetName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "WebAvailabilitySet"
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'),copyIndex())]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(parameters('dnsPrefixNameForPublicIP'),copyIndex()))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig', copyIndex())]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('dnsPrefixNameForPublicIP'),copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "nicCopy",
        "count": "[parameters('vmCount')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "copy": {
        "name": "nodeCopy",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nicName'),copyIndex()))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('webAvailabilitySetName'))]"
      ],
      "location": "[parameters('location')]",
      "name": "[concat(parameters('vmNamePrefix'),copyIndex())]",

      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('webAvailabilitySetName'))]"
        },
        "osProfile": {
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',concat(variables('OSDiskName'),copyIndex()),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "[variables('dataDiskSize')]",
              "lun": 0,
              "vhd": {
                "Uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/',concat(parameters('vmNamePrefix'),copyIndex()),'dataDisk1' ,'.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            }
          ]
        },

        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),copyIndex()))]"
            }
          ]
        }
      },
      "tags": {
        "displayName": "VirtualMachine"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNamePrefix'),copyIndex(),'/', variables('vmExtensionName'))]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "extensionLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmNamePrefix'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "settings": {
          "fileUris": [ "[variables('scriptUrl')]" ],
          "commandToExecute": "[variables('commandToExecute')]"
        }
      }

    }
  ]
    }
